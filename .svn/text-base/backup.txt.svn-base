import javax.microedition.lcdui.Alert;
import javax.microedition.lcdui.AlertType;
import javax.microedition.lcdui.Command;
import javax.microedition.lcdui.CommandListener;
import javax.microedition.lcdui.Display;
import javax.microedition.lcdui.Displayable;
import javax.microedition.lcdui.Form;
import javax.microedition.lcdui.StringItem;
import javax.microedition.lcdui.TextField;
import javax.microedition.midlet.MIDlet;
import javax.microedition.midlet.MIDletStateChangeException;



public class RecuperaCoordenadas extends MIDlet implements CommandListener  {

	  private Display display;
	  public Form form;
	  public TextField login,senha;
	  private String id,pass=null;
	  private Command acessar;
	  private StringItem si;
	  private Welcome welcome= new Welcome("SGCT - Mobile");  
	  private String status=null;
	  
	public RecuperaCoordenadas() {
		    display = Display.getDisplay(this);    
		    form = new Form("SGCT - acesso");		    
		    acessar= new Command("OK", Command.OK, 1);
		    login = new TextField("ID:","",10,TextField.ANY);
			senha = new TextField("Senha:","",10,TextField.PASSWORD);			
		    form.append(login);
		    form.append(senha);
		    form.addCommand(acessar);		   
		    form.setCommandListener(this);    
	}

	protected void destroyApp(boolean arg0) throws MIDletStateChangeException {		
		final EnviaDados envialogout = new EnviaDados(id,pass,"logoutMotorista");
    	envialogout.start();
	}

	protected void pauseApp() {
	}

	protected void startApp() throws MIDletStateChangeException {
		display.setCurrent(form);
	}
	public Display getDisplay() {
		return display;
	}

	public void commandAction(Command c, Displayable d) {
		String label = c.getLabel();
	    if (label.equals("OK")){
	    	 if (validarCampos()){
	    		 id=login.getString();
	    		 pass=senha.getString();
	    		 Alert alerta=null;
//	    		 if (status == null){
//	    			 	 alerta = new Alert("Alerta","Deseja Prosseguir?", null, AlertType.CONFIRMATION);
//		    			 alerta.setTimeout(Alert.FOREVER);
//		    			 alerta.addCommand(new Command("Sim", Command.OK, 0));
//		    			 alerta.addCommand(new Command("Não", Command.CANCEL, 0));
//		    			 alerta.setCommandListener(new CommandListener() {     
//						        public void commandAction(Command command, Displayable telaAlert) {     
//						            switch (command.getCommandType()) {     
//						                case Command.OK:     
						                	if (validarStatus()){
											     final Provider provider = new Provider();
												 senha.setString("");
												 login.setString("");
									    		 display.setCurrent(welcome);
									    		 CommandListener commandListener = new CommandListener() {
											        public void commandAction(Command c, Displayable d) {
											        	if (c == welcome.getAcessar()){
															Alert alerta = new Alert("Alerta","Deseja sair do Sistema?", null, AlertType.CONFIRMATION);
															alerta.addCommand(new Command("Sim", Command.OK, 0));     
														    alerta.addCommand(new Command("Não", Command.CANCEL, 1));     
														    alerta.setTimeout(Alert.FOREVER);     
														    //Define as ações dos ccomandos SIM e NAO     
														    alerta.setCommandListener(new CommandListener() {     
														        public void commandAction(Command command, Displayable telaAlert) {     
														            switch (command.getCommandType()) {     
														                case Command.OK:  //Mostra a tela anterior
														                	final EnviaLogout envialogout = new EnviaLogout(id,pass,"logoutMotorista");
														                	envialogout.start();
														                	if(provider.isAlive()){
														                		provider.setStatus(false);
														                	}
														                	setStatus(null);
														                	display.setCurrent(form);
														                	break;						                         
														                case Command.CANCEL:     
														                    display.setCurrent(welcome); //Mostra a tela anterior     
														                    break;     
														            }     
														        }
														    });
															display.setCurrent(alerta);	    	
												    	 }
											        }
											    };
											     welcome.setCommandListener(commandListener);
											     display.setCurrent(welcome);
											     setStatus(null);
											     provider.setLogin(id);
								        		 provider.setSenha(pass);
											     provider.setStatus(true);
												 provider.start();												 								    		 
								    		 }
//						                	 break;						                         
//						                case Command.CANCEL:     
//						                    display.setCurrent(form); //Mostra a tela anterior     
//						                    break;     
//						            }     
//						        }
//						    });
//		    			 display.setCurrent(alerta);  			 
//		    	 }
							
				
	    	 }
	    	 
	    }
	}
	 public void displayString(String string)
	   {
	      si.setText(string);  
	   }
	
	public boolean validarCampos(){
		if (login.getString().equals("")){
			Alert alert = new Alert("Alerta","Campo de login vazio !", null, AlertType.INFO);
			display.setCurrent(alert);
			return false;
		}else if(senha.getString().equals("")){
			Alert alert = new Alert("Alerta","Campo de senha vazio!", null, AlertType.INFO);
			display.setCurrent(alert);
			return false;
		}
		final EnviaDados enviadados= new EnviaDados(login.getString(),senha.getString(),"AcessoMotorista",this);		 
		enviadados.start();
		if(status == null){
			Alert alert = new Alert("Alerta","Aguarde um momento", null, AlertType.INFO);
			alert.setTimeout(6000);
			display.setCurrent(alert);
		}
		return true;
	}
	
	public boolean validarStatus(){		 
		 if (getStatus().equals("Status 200")){
			 return true;
		 }else{			
             Alert alert = new Alert("Alerta","Login ou senha inválidos!", null, AlertType.INFO);
             display.setCurrent(alert);
             setStatus(null);
			 return false;
		 }		
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public String getStatus() {
		return status;
	}
}
